

public class ReverseLinkedList {
	 
	
	public class ListNode {
		    int val;
		    ListNode next;
		    ListNode(int x) { val = x; }
		  }
	
	
	public void print(ListNode l1){
		 
		 if(l1 == null)
			 System.out.println("Empty list");
		 
		 while(l1 != null){
			 System.out.print("   "+l1.val);
			 l1 = l1.next;
			 
			 }
		 System.out.println("");
	 }
	
	
	public ListNode createList(int a[]){
		 if(a.length == 0)
			 return null;
		 
		 ListNode head = new ListNode(a[0]);
		 ListNode prevHead = head;
		 
		 for(int i = 1; i < a.length;i++){
			 head.next = new ListNode(a[i]);
			 head = head.next;
			 
			 }
		 
		 head.next = null;
		 return prevHead;
		 
	 }
	
	public ListNode reverseList(ListNode head) {
	    if(head==null || head.next == null)
	        return head;
	 
	    //get second node    
	    ListNode second = head.next;
	    //set first's next to be null
	    head.next = null;
	 
	    ListNode rest = reverseList(second);
	    second.next = head;
	 
	    return rest;
	}

	
	public ListNode reverseListIterative(ListNode head) {
	    if(head==null||head.next==null)
	        return head;
	 
	    ListNode p1 = head;
	    ListNode p2 = p1.next;
	 
	    head.next = null;
	    while(p1!=null&& p2!=null){
	        ListNode t = p2.next;
	        p2.next = p1;
	        p1 = p2;
	        p2 = t;
	    }
	 
	    return p1;
	}
	
	
	
	public static void main(String[] args){
		ReverseLinkedList obj = new ReverseLinkedList();
		 int a[] = {10,20,30,40};
		 ListNode head = obj.createList(a);
		 
		 System.out.println( "Printing original list ");
		 obj.print(head);
		 System.out.println();
		 
		/* ListNode head1= obj.reverseList(head);
		 System.out.println( "Printing reverse list ");
		 obj.print(head1);
		 System.out.println();*/
		 
		 
		 ListNode head2= obj.reverseListIterative(head);
		 System.out.println( "Printing reverse list  iteratively");
		 obj.print(head2);
		 System.out.println();
		 
	 }
	 
	
	
	

}
