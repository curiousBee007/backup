
public class findingElementSortedMatrix {
	
	 public boolean searchMatrix(int[][] matrix, int target) {
		    if(matrix == null || matrix.length == 0 || matrix[0].length == 0)
		       {System.out.println("Check 0");
		    	return false;
		       
		       }
		      
		    
		    int columnLength = matrix[0].length; 
		    int mid = (columnLength -1)/2;
		    int start = 0;
		    int end = columnLength -1;
		    boolean foundTarget = false;
		    
		        
		    for(int i = 0 ; i < matrix.length ;i++)
		     { 
		    	System.out.println();
		    	System.out.println( "Row value " +i);
		        if(target >= matrix[i][start] && target <= matrix[i][end]){
		        	System.out.println("Check 1");
		            int midElem  = matrix[i][mid];
		            System.out.println(midElem);
		            if(target == midElem){
		            	System.out.println("Check 2");
		                return true;
		            }
		            if(target < midElem){
		            boolean foundVal = binarySearch(0,mid,target,matrix[i]);
		            System.out.println("Check 3");
		            if(foundVal){
		            	System.out.println("Check 4");
		               return foundVal;
		               }
		        }
		        if(target > midElem){
		        	System.out.println("Check 5");
		            boolean foundVal1 = binarySearch(mid,end,target,matrix[i]);
		            if(foundVal1){
		            	System.out.println("Check 6");
		               return foundVal1;}
		        }
		        
		     }
		        
		     }  
		        return foundTarget;
		    }
		    
		    public boolean binarySearch(int start,int end , int x,int arr[]){
		        boolean foundElement = false;
		        
		        while(end >= start){
		            int mid = (start + end)/2;
		            System.out.println("Inside helper mid element start value is "+ start +"and end value is " +end );
		            System.out.println("Inside helper mid element is "+arr[mid]);
		            
		            if(arr[mid] == x){
		             return true;
		            }
		            else if(x > arr[mid]){
		            	System.out.println("Condition 1");
		            	 start  = mid +1; 
		                System.out.println("Inside helper mid element start value is "+ start +"and end value is " +end );
		                System.out.println("**********************************");
		            }
		            
		            else{
		            	System.out.println("Condition 2");
		                end = mid - 1;
		                System.out.println("Inside helper mid element start value is "+ start +"and end value is " +end );
		                System.out.println("**********************************");
		            }
		        }
		        
		        return foundElement;
		    }
		    
		    public static void main(String[] args){
		    	int mat [][] = {
		    	                {1,   4,  7, 11, 15},
		    	                {2,   5,  8, 12, 19},
		    	                {3,   6,  9, 16, 22},
		    	                {10, 13, 14, 17, 24},
		    	                {18, 21, 23, 26, 30}
		    	};
		    	int mat1[][] = {{-1,3}};
		    	findingElementSortedMatrix obj = new findingElementSortedMatrix();
		    	int target = 3;
		    	boolean found = obj.searchMatrix(mat1, target);
		    	System.out.println( "Found value is "+found);
		    }

}
