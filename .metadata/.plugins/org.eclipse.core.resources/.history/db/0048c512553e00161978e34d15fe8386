import java.util.List;

public class NeedleHaystack {
	
	 public int strStr(String haystack, String needle) {
	        
	        if (haystack.length() == 0 && needle.length() == 0)
	        return 0;
	        
	       
	        
	        if(needle.length() > haystack.length())
	        return -1;
	        
	        
	        if(needle.length() == 0)
	        return 0;
	       
	        char first = needle.charAt(0);
	        
	        int flag = -1;
	        
	        for(int i = 0; i < haystack.length(); i++){
	            
	            if (haystack.charAt(i) == first){
	                int startIndex = i;
	                int conflictFound = 0;
	                for(int j = 1; j < needle.length(); j++)
	                {
	                    while((startIndex+j) < haystack.length()){
	                    if(haystack.charAt(startIndex+j) != needle.charAt(j)){
	                        conflictFound = 1;
	                        break;
	                    }
	                    }  
	                }
	                if(conflictFound == 0){
	                    //flag = 1;
	                 return startIndex;
	                }
	            }
	            
	            
	        }
	        
	        return flag;
	    }
	 
	 public static void main(String[] args){
		 NeedleHaystack obj = new NeedleHaystack();
		 String str = "aaa";
		 String str1 = "aa";
		 
		 int startIndex = obj.strStr(str, str1);
		 //List<String> list1 = obj.letterCombinations(str);
		 
		
		 
		 
	   }
	}
	 
	 
	 

}
