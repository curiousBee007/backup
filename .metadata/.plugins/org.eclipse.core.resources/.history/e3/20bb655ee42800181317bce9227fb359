import java.util.*;
public class Challenge3 {

	public static void price(String line){
		StringBuilder sb = new StringBuilder();
	       int count = 0;
	       int length = line.length();
	       while(line.charAt(count) != ';'){
	         char ch = line.charAt(count);
	          sb.append(ch);
	          count = count + 1;
	       }
	       
	       String pp = sb.toString();
	       double purchasePrice = Double.parseDouble(pp);
	       
	       String cp = line.substring(count + 1,length);
	       double cashPrice = Double.parseDouble(cp);
	       
	       double difference = cashPrice - purchasePrice;
	       
	       if(difference < 0){
	         System.out.println("ERROR");
	         return;
	       }
	       if(difference == 0.0){
	         System.out.println("ZERO");
	         return;
	       }
	       
	       //List<String> changeValues = new ArrayList<String>();
	       Set<String> changeSet = new HashSet<String>();
	       HashMap<Double,String> hmap = new HashMap<Double,String>();
	       hmap.put(100.00 ,"ONE HUNDRED");
	       hmap.put(50.00 ,"FIFTY");
	       hmap.put(20.00 ,"TWENTY");
	       hmap.put(10.00 ,"TEN");
	       hmap.put(5.00 ,"FIVE");
	       hmap.put(2.00 ,"TWO");
	       hmap.put(1.00 ,"ONE");
	       hmap.put(0.50 ,"HALF DOLLAR");
	       hmap.put(0.25 ,"QUARTER");
	       hmap.put(0.10 ,"DIME");
	       hmap.put(0.05 ,"NICKEL");
	       hmap.put(0.01 ,"PENNY");
	       
	       
	       double[] changeArray = {100.00, 50.00, 20.00,10.00,5.00,2.00,1.00,0.50,
	                               0.25,0.10,0.05,0.01};
	       
	       int[] arrDenom = new int[changeArray.length];
	        
	       int changeArrayLength = changeArray.length;                      
	       
	       for(int i = 0 ; i < changeArrayLength;i++){
	              
	              if(difference <= 0.0)
	            	  break;
	              arrDenom[i] = (int) (difference/changeArray[i]);
	              difference = difference - changeArray[i]*arrDenom[i] ;
	              
	            }
	        for(int i = 0 ; i < arrDenom.length ; i++){
	        	if(arrDenom[i] > 0){
	        		changeSet.add(hmap.get(changeArray[i]));
	        	}
	        	
	        }
	         
	         List<String> currencyList = new ArrayList(changeSet);
	         Collections.sort(currencyList);
	       
	        StringBuilder finalString = new StringBuilder();
	        for(String s : currencyList)
	           {
	             finalString.append(s);
	             finalString.append(',');
	           }
	        
	        String finalVal = finalString.toString();
	        //to account for last comma
	        finalVal = finalVal.substring(0,finalVal.length() -1);
	        
	        System.out.println(finalVal);
	        
	       
	}
	
	
	static char firstNotRepeatingCharacter(String s){
		 if(s == null)
		      return '_';
		   
		   int[] charArray = new int[26];
		   int[] indexArray = new int[26];
		   for(int k = 0 ; k < indexArray.length ; k++){
		      indexArray[k] = -1;
		   }
		   
		   for(int i = 0 ; i < s.length();i++){
		      char ch = s.charAt(i);
		      int index =(int)(ch - 97);
		      charArray[index] =  charArray[index] + 1;
		      if(indexArray[index] == -1){
		         indexArray[index] = i;
		      }
		   }
		   
		   /*for(int k : charArray){
			   System.out.print(" "+k);
		   }
		   System.out.println();
		   
		   for(int k : indexArray){
			   System.out.print(" "+k);
		   }
		   System.out.println();*/
		   
		   int minVal = Integer.MAX_VALUE;
		   for(int j = 0 ; j < 26; j++){
		      if(charArray[j] == 1){
		        minVal = Math.min(minVal,indexArray[j]);
		      }
		   }
		   if(minVal !=  Integer.MAX_VALUE){
		      return s.charAt(minVal);
		   }
		   return '_';

	}
	
	
	public static int firstDuplicate(int[] a) {
	    
	    int[] countArray = new int[a.length];
	    int[] indexArray = new int[a.length];
	    

	    for(int i = 0 ; i < a.length; i++){
	        int value = a[i] - 1;
	        countArray[value] = countArray[value] +1;
	        if(countArray[value] == 2){
	            indexArray[value] =i;
	        }
	     }
	    int minVal = Integer.MAX_VALUE;
	    int duplicateVal = -1;
	    for(int i = 0 ; i < countArray.length; i++){
	        if(countArray[i] > 1){
	           minVal = Math.min(minVal,indexArray[i]);
	         }
	    }
	    if(minVal !=  Integer.MAX_VALUE){
		      return minVal;
		   }
	    return minVal + 1;
	}
	public static void main(String[] args){
		//String line = "45;50";
		//String line = "15.46;100.00";
		//String s = "abcdefghijklmnopqrstuvwxyziflskecznslkjfabe";
		String s = "bcccccccccccccyb";
		char ch = firstNotRepeatingCharacter(s);
		System.out.println(ch);
		int[] a = {2,3,3,1,5,2};
		int x = firstDuplicate(a);
		System.out.println(x);
		
	}
}
